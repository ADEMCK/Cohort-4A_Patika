package Week5.PatikaStore;

import java.util.HashSet;
import java.util.Scanner;
import java.util.TreeSet;

// Ana sınıf
public class Main {
    public static void main(String[] args) {

        Scanner input = new Scanner(System.in);
        System.out.println("PatikaStore Ürün Yönetim Paneline Hoşgeldiniz!");
        System.out.println("=========================================");
        // Kullanıcıya seçeneklerin listesi gösterilir.
        while (true) {
            System.out.println("1 - Notebook İşlemleri");
            System.out.println("2 - Cep Telefonu İşlemleri");
            System.out.println("3 - Marka Listele");
            System.out.println("0 - Çıkış Yap");
            System.out.print("Tercihiniz: ");
            int select = input.nextInt();

            switch (select) {
                case 1:
                    // Notebook işlemleri seçildiğinde notebook listesi oluşturulur ve gösterilir.
                    HashSet<NoteBook> noteBooks = new HashSet<>();
                    noteBooks.add(new NoteBook(1, "HUAWEI MateBook 14", "7000.0 TL", "Huawai", 512, 14.0, 16));
                    noteBooks.add(new NoteBook(2, "LENOVO V14 IGL", "3600.0 TL", "Lenovo", 1024, 14.0, 8));
                    noteBooks.add(new NoteBook(3, "ASUS Tuf Gaming", "8199.0 TL", "Asus", 2048, 15.6, 32));

                    // Notebook listesi formatlı bir şekilde gösterilir
                    System.out.println("----------------------------------------------------------------------------------------------------");
                    System.out.println("| ID | Ürün Adı                      | Fiyat     | Marka    | Depolama | Ekran      | RAM    |");
                    System.out.println("----------------------------------------------------------------------------------------------------");
                    for (NoteBook nb : noteBooks) {
                        System.out.println(nb);

                    }
                    System.out.println("----------------------------------------------------------------------------------------------------");
                    break;

                case 2:
                    // Cep telefonu işlemleri seçildiğinde cep telefonu listesi oluşturulur ve gösterilir.
                    HashSet<MobilePhone> mobilePhones = new HashSet<>();
                    mobilePhones.add(new MobilePhone(1, "SAMSUNG GALAXY A51", "3199.0 TL", "Samsung", 128, 6.5, 32, 4000.0, 6, "Siyah"));
                    mobilePhones.add(new MobilePhone(2, "IPHONE 11 64 GB", "7379.0 TL", "Apple", 64, 6.1, 5, 3046.0, 6, "Mavi"));
                    mobilePhones.add(new MobilePhone(3, "REDMI NOTE 10 Pro 8GB", "4012.0 TL", "Xiaomi", 128, 6.5, 35, 4000.0, 12, "Beyaz"));

                    // Cep telefonu listesi formatlı bir şekilde gösterilir
                    System.out.println("----------------------------------------------------------------------------------------------------------------------------------------------");
                    System.out.println("| ID | Ürün Adı                       | Fiyat     | Marka      | Depolama | Ekran    | Kamera | Pil        | RAM    | Renk   |");
                    System.out.println("----------------------------------------------------------------------------------------------------------------------------------------------");

                    for (MobilePhone mp : mobilePhones) {
                        System.out.println(mp);
                    }
                    System.out.println("----------------------------------------------------------------------------------------------------------------------------------------------");
                    break;

                case 3:
                    // Marka listesi oluşturulur ve alfabetik sıraya göre gösterilir.
                    TreeSet<Brand> brands = new TreeSet<>(new OrderNameComperator());
                    System.out.println("----------------------");
                    brands.add(new Brand("-Samsung"));
                    brands.add(new Brand("-Lenovo"));
                    brands.add(new Brand("-Apple"));
                    brands.add(new Brand("-Huawei"));
                    brands.add(new Brand("-Casper"));
                    brands.add(new Brand("-Asus"));
                    brands.add(new Brand("-HP"));
                    brands.add(new Brand("-Xiaomi"));
                    brands.add(new Brand("-Monster"));

                    for (Brand br : brands) {
                        System.out.println(br.getName());
                    }
                    System.out.println("----------------------");
                    break;

                case 0:
                    // Çıkış seçeneği seçildiğinde program sonlandırılır.
                    System.out.println("Çıkış yapıldı. Görüşmek üzere!!");
                    return;
                default:
                    // Geçersiz bir seçenek seçildiğinde kullanıcıya uyarı mesajı gösterilir.
                    System.out.println("Geçersiz bir seçim yaptınız. Lütfen tekrar deneyin.");
                    break;
            }
        }
    }
}
package Week5.PatikaStore;

import java.util.Comparator;

// Markaları alfabetik sıraya göre sıralamak için Comparator sınıfı

public class OrderNameComperator implements Comparator<Brand>  {


    @Override
    public int compare(Brand o1, Brand o2) {
        return o1.getName().compareTo(o2.getName());
    }
}
package Week5.PatikaStore;

public class NoteBook {

    String productName;
    String brand;
    int ID;
    String price;
    int storage;
    double screen;
    int ram;

    public NoteBook(int ID, String productName, String price, String brand, int storage, double screen, int ram) {
        this.productName = productName;
        this.brand = brand;
        this.ID = ID;
        this.price = price;
        this.storage = storage;
        this.screen = screen;
        this.ram = ram;
    }

    //Get-Set metodları

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public String getBrand() {
        return brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    public int getID() {
        return ID;
    }

    public void setID(int ID) {
        this.ID = ID;
    }

    public String getPrice() {
        return price;
    }

    public void setPrice(String price) {
        this.price = price;
    }

    public int getStorage() {
        return storage;
    }

    public void setStorage(int storage) {
        this.storage = storage;
    }

    public double getScreen() {
        return screen;
    }

    public void setScreen(double screen) {
        this.screen = screen;
    }

    public int getRam() {
        return ram;
    }

    public void setRam(int ram) {
        this.ram = ram;
    }

    // Notebook bilgilerini formatlı bir şekilde döndüren metot
    @Override
    public String toString() {
        return String.format("| %-2d | %-29s | %-9s | %-8s | %-5d GB | %-6.1f inç | %-2d GB  |", ID, productName, price, brand, storage, screen, ram);
    }
}
package Week5.PatikaStore;

public class Brand {

    private String name;

    public Brand(String name) {
        this.name = name;

    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}
package Week5.PatikaStore;

public class MobilePhone {

    int ID;
    String productName;
    String price;
    String brand;
    int storage;
    double screen;
    int camera;
    double battery;
    int ram;
    String color;

    public MobilePhone(int ID, String productName, String price, String brand, int storage, double screen, int camera, double battery, int ram, String color) {
        this.ID = ID;
        this.productName = productName;
        this.price = price;
        this.brand = brand;
        this.storage = storage;
        this.screen = screen;
        this.camera = camera;
        this.battery = battery;
        this.ram = ram;
        this.color = color;
    }

    //Get-Set Metotları
    public int getID() {
        return ID;
    }

    public void setID(int ID) {
        this.ID = ID;
    }

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public String getPrice() {
        return price;
    }

    public void setPrice(String price) {
        this.price = price;
    }

    public String getBrand() {
        return brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    public int getStorage() {
        return storage;
    }

    public void setStorage(int storage) {
        this.storage = storage;
    }

    public double getScreen() {
        return screen;
    }

    public void setScreen(double screen) {
        this.screen = screen;
    }

    public int getCamera() {
        return camera;
    }

    public void setCamera(int camera) {
        this.camera = camera;
    }

    public double getBattery() {
        return battery;
    }

    public void setBattery(double battery) {
        this.battery = battery;
    }

    public int getRam() {
        return ram;
    }

    public void setRam(int ram) {
        this.ram = ram;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    // Cep telefonu bilgilerini formatlı bir şekilde döndüren metot
    @Override
    public String toString(){
        return String.format("| %-2d | %-30s | %-9s | %-10s | %-6d GB| %-3s inch | %-3s MP | %-6s mAh | %-3s GB | %-6s |",ID,productName,price,brand,storage,screen,camera,battery,ram,color);
    }
}
